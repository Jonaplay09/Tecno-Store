{"ast":null,"code":"import React,{useState}from'react';import{useNavigate}from'react-router-dom';import InputField from'./InputField';import Button from'./Button';import logo from'./TECNO.png';import eyeClosed from'./eye_closed.png';import eyeOpen from'./eye_icon.png';import'./Login.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Login=()=>{const navigate=useNavigate();const[formType,setFormType]=useState('login');const[username,setUsername]=useState('');const[email,setEmail]=useState('');const[password,setPassword]=useState('');const[isPasswordVisible,setIsPasswordVisible]=useState(false);const togglePasswordVisibility=()=>{setIsPasswordVisible(!isPasswordVisible);};const toggleFormType=()=>{setFormType(formType==='login'?'register':'login');};const handleLogin=()=>{fetch('http://localhost:5000/api/login',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email,contraseña:password})}).then(response=>response.json()).then(data=>{if(data.token){localStorage.setItem('token',data.token);navigate('/home');}else{// Manejar errores de inicio de sesión\n}});};const handleRegister=()=>{fetch('http://localhost:5000/api/usuarios',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({nombre:username,email,contraseña:password,rol:'user'})}).then(response=>response.json()).then(data=>{if(data.id){setFormType('login');}else{// Manejar errores de registro\n}});};return/*#__PURE__*/_jsxs(\"div\",{className:\"login\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"login__logo-container\",children:/*#__PURE__*/_jsx(\"img\",{src:logo,alt:\"Logo Tecno Store\",className:\"login__logo\"})}),/*#__PURE__*/_jsx(\"h1\",{className:\"login__title\",children:formType==='login'?'Iniciar Sesión':'Regístrate'}),formType==='register'&&/*#__PURE__*/_jsx(InputField,{type:\"text\",placeholder:\"Nombre de usuario\",value:username,onChange:e=>setUsername(e.target.value)}),/*#__PURE__*/_jsx(InputField,{type:\"email\",placeholder:\"Correo electr\\xF3nico\",value:email,onChange:e=>setEmail(e.target.value)}),/*#__PURE__*/_jsx(InputField,{type:isPasswordVisible?'text':'password',placeholder:\"Contrase\\xF1a\",value:password,onChange:e=>setPassword(e.target.value),icon:isPasswordVisible?eyeOpen:eyeClosed,onIconClick:togglePasswordVisibility}),/*#__PURE__*/_jsx(Button,{onClick:formType==='login'?handleLogin:handleRegister,children:formType==='login'?'Iniciar Sesión':'Registrarse'}),/*#__PURE__*/_jsxs(\"p\",{className:\"login__register\",children:[formType==='login'?'No tienes una cuenta?':'Ya tienes una cuenta?',/*#__PURE__*/_jsx(\"span\",{onClick:toggleFormType,className:\"login__register-link\",children:formType==='login'?'Regístrate':'Iniciar Sesión'})]})]});};export default Login;","map":{"version":3,"names":["React","useState","useNavigate","InputField","Button","logo","eyeClosed","eyeOpen","jsx","_jsx","jsxs","_jsxs","Login","navigate","formType","setFormType","username","setUsername","email","setEmail","password","setPassword","isPasswordVisible","setIsPasswordVisible","togglePasswordVisibility","toggleFormType","handleLogin","fetch","method","headers","body","JSON","stringify","contraseña","then","response","json","data","token","localStorage","setItem","handleRegister","nombre","rol","id","className","children","src","alt","type","placeholder","value","onChange","e","target","icon","onIconClick","onClick"],"sources":["C:/React/tecno-store/src/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport InputField from './InputField';\r\nimport Button from './Button';\r\nimport logo from './TECNO.png';\r\nimport eyeClosed from './eye_closed.png';\r\nimport eyeOpen from './eye_icon.png';\r\nimport './Login.css';\r\n\r\nconst Login = () => {\r\n  const navigate = useNavigate(); \r\n  const [formType, setFormType] = useState('login');\r\n  const [username, setUsername] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [isPasswordVisible, setIsPasswordVisible] = useState(false);\r\n\r\n  const togglePasswordVisibility = () => {\r\n    setIsPasswordVisible(!isPasswordVisible);\r\n  };\r\n\r\n  const toggleFormType = () => {\r\n    setFormType(formType === 'login' ? 'register' : 'login');\r\n  };\r\n\r\n  const handleLogin = () => {\r\n    fetch('http://localhost:5000/api/login', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ email, contraseña: password })\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      if (data.token) {\r\n        localStorage.setItem('token', data.token);\r\n        navigate('/home');\r\n      } else {\r\n        // Manejar errores de inicio de sesión\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleRegister = () => {\r\n    fetch('http://localhost:5000/api/usuarios', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ nombre: username, email, contraseña: password, rol: 'user' })\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      if (data.id) {\r\n        setFormType('login');\r\n      } else {\r\n        // Manejar errores de registro\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <div className=\"login\">\r\n      <div className=\"login__logo-container\">\r\n        <img src={logo} alt=\"Logo Tecno Store\" className=\"login__logo\" />\r\n      </div>\r\n      <h1 className=\"login__title\">{formType === 'login' ? 'Iniciar Sesión' : 'Regístrate'}</h1>\r\n      {formType === 'register' && (\r\n        <InputField\r\n          type=\"text\"\r\n          placeholder=\"Nombre de usuario\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n        />\r\n      )}\r\n      <InputField\r\n        type=\"email\"\r\n        placeholder=\"Correo electrónico\"\r\n        value={email}\r\n        onChange={(e) => setEmail(e.target.value)}\r\n      />\r\n      <InputField\r\n        type={isPasswordVisible ? 'text' : 'password'}\r\n        placeholder=\"Contraseña\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n        icon={isPasswordVisible ? eyeOpen : eyeClosed}\r\n        onIconClick={togglePasswordVisibility}\r\n      />\r\n      <Button onClick={formType === 'login' ? handleLogin : handleRegister}>\r\n        {formType === 'login' ? 'Iniciar Sesión' : 'Registrarse'}\r\n      </Button>\r\n      <p className=\"login__register\">\r\n        {formType === 'login' ? 'No tienes una cuenta?' : 'Ya tienes una cuenta?'}\r\n        <span onClick={toggleFormType} className=\"login__register-link\">\r\n          {formType === 'login' ? 'Regístrate' : 'Iniciar Sesión'}\r\n        </span>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}