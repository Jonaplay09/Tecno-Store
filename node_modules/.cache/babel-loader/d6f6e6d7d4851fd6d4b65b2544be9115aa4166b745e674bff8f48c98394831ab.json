{"ast":null,"code":"import React,{useState}from'react';import{useNavigate}from'react-router-dom';import InputField from'./InputField';import Button from'./Button';import logo from'./TECNO.png';import eyeClosed from'./eye_closed.png';import eyeOpen from'./eye_icon.png';import swal from'sweetalert';import'./Login.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Login=()=>{const navigate=useNavigate();const[formType,setFormType]=useState('login');const[username,setUsername]=useState('');const[email,setEmail]=useState('');const[pass,setPass]=useState('');const[isPassVisible,setIsPassVisible]=useState(false);const togglePassVisibility=()=>{setIsPassVisible(!isPassVisible);};const toggleFormType=()=>{setFormType(formType==='login'?'register':'login');};const validarCorreo=correo=>{const regexCorreo=/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;return regexCorreo.test(correo);};const validarContraseña=contraseña=>{const regexContraseña=/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&\\S]{8,}$/;return regexContraseña.test(contraseña);};const handleLogin=()=>{if(!email||!pass){swal('Error','Por favor, rellena todos los campos.','error');return;}if(!validarCorreo(email)||!validarContraseña(pass)){swal('Error','Por favor, introduce un correo electrónico y una contraseña válidos.','error');return;}if(!validarCorreo(email)||!validarContraseña(pass)){swal('Error','Por favor, introduce un correo electrónico y una contraseña válidos.','error');return;}fetch('http://localhost:5000/api/login',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email,pass})}).then(response=>response.json()).then(data=>{if(data.token){console.log(data.token);// Imprime el token en la consola\nlocalStorage.setItem('token',data.token);localStorage.setItem('userType',data.userType);// Almacena el tipo de usuario\nswal('Éxito','Inicio de sesión exitoso.','success').then(()=>{navigate('/home');// Redirige al usuario a la página de inicio\n}).catch(error=>{console.error('Error:',error);});}else{swal('Error','Inicio de sesión fallido. Por favor, verifica tus credenciales.','error');}}).catch(error=>{console.error('Error:',error);});};const handleRegister=()=>{if(!username||!email||!pass){swal('Error','Por favor, rellena todos los campos.','error');return;}if(!validarCorreo(email)||!validarContraseña(pass)){swal('Error','Por favor, introduce un correo electrónico y una contraseña válidos.','error');return;}if(!validarCorreo(email)||!validarContraseña(pass)){swal('Error','Por favor, introduce un correo electrónico y una contraseña válidos.','error');return;}fetch('http://localhost:5000/api/usuarios',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({username,email,pass,rol:'user'})}).then(response=>response.json()).then(data=>{if(data.id){swal('Éxito','Registro exitoso. Ahora puedes iniciar sesión.','success').then(()=>{setFormType('login');// Cambia a la pantalla de inicio de sesión\n});}else{swal('Error','Registro fallido. Por favor, intenta de nuevo.','error');}});};return/*#__PURE__*/_jsxs(\"div\",{className:\"login\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"login__logo-container\",children:/*#__PURE__*/_jsx(\"img\",{src:logo,alt:\"Logo Tecno Store\",className:\"login__logo\"})}),/*#__PURE__*/_jsx(\"h1\",{className:\"login__title\",children:formType==='login'?'Iniciar Sesión':'Regístrate'}),formType==='register'&&/*#__PURE__*/_jsx(InputField,{type:\"text\",placeholder:\"Nombre de usuario\",value:username,onChange:e=>setUsername(e.target.value)}),/*#__PURE__*/_jsx(InputField,{type:\"email\",placeholder:\"Correo electr\\xF3nico\",value:email,onChange:e=>setEmail(e.target.value)}),/*#__PURE__*/_jsx(InputField,{type:isPassVisible?'text':'password',placeholder:\"Contrase\\xF1a\",value:pass,onChange:e=>setPass(e.target.value),icon:isPassVisible?eyeOpen:eyeClosed,onIconClick:togglePassVisibility}),/*#__PURE__*/_jsx(Button,{onClick:formType==='login'?handleLogin:handleRegister,children:formType==='login'?'Iniciar Sesión':'Registrarse'}),/*#__PURE__*/_jsxs(\"p\",{className:\"login__register\",children:[formType==='login'?'No tienes una cuenta?':'Ya tienes una cuenta?',/*#__PURE__*/_jsx(\"span\",{onClick:toggleFormType,className:\"login__register-link\",children:formType==='login'?'Regístrate':'Iniciar Sesión'})]})]});};export default Login;","map":{"version":3,"names":["React","useState","useNavigate","InputField","Button","logo","eyeClosed","eyeOpen","swal","jsx","_jsx","jsxs","_jsxs","Login","navigate","formType","setFormType","username","setUsername","email","setEmail","pass","setPass","isPassVisible","setIsPassVisible","togglePassVisibility","toggleFormType","validarCorreo","correo","regexCorreo","test","validarContraseña","contraseña","regexContraseña","handleLogin","fetch","method","headers","body","JSON","stringify","then","response","json","data","token","console","log","localStorage","setItem","userType","catch","error","handleRegister","rol","id","className","children","src","alt","type","placeholder","value","onChange","e","target","icon","onIconClick","onClick"],"sources":["C:/React/tecno-store/src/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport InputField from './InputField';\r\nimport Button from './Button';\r\nimport logo from './TECNO.png';\r\nimport eyeClosed from './eye_closed.png';\r\nimport eyeOpen from './eye_icon.png';\r\nimport swal from 'sweetalert';\r\nimport './Login.css';\r\n\r\n\r\nconst Login = () => {\r\n  const navigate = useNavigate();\r\n  const [formType, setFormType] = useState('login');\r\n  const [username, setUsername] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [pass, setPass] = useState('');\r\n  const [isPassVisible, setIsPassVisible] = useState(false);\r\n\r\n  const togglePassVisibility = () => {\r\n    setIsPassVisible(!isPassVisible);\r\n  };\r\n\r\n  const toggleFormType = () => {\r\n    setFormType(formType === 'login' ? 'register' : 'login');\r\n  };\r\n\r\n  const validarCorreo = (correo) => {\r\n    const regexCorreo = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return regexCorreo.test(correo);\r\n  };\r\n\r\n  const validarContraseña = (contraseña) => {\r\n    const regexContraseña = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&\\S]{8,}$/;\r\n    return regexContraseña.test(contraseña);\r\n  };\r\n\r\n\r\n  const handleLogin = () => {\r\n    if (!email || !pass) {\r\n      swal('Error', 'Por favor, rellena todos los campos.', 'error');\r\n      return;\r\n    }\r\n    if (!validarCorreo(email) || !validarContraseña(pass)) {\r\n      swal('Error', 'Por favor, introduce un correo electrónico y una contraseña válidos.', 'error');\r\n      return;\r\n    }\r\n    if (!validarCorreo(email) || !validarContraseña(pass)) {\r\n      swal('Error', 'Por favor, introduce un correo electrónico y una contraseña válidos.', 'error');\r\n      return;\r\n    }\r\n\r\n    fetch('http://localhost:5000/api/login', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ email, pass })\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        if (data.token) {\r\n          console.log(data.token); // Imprime el token en la consola\r\n          localStorage.setItem('token', data.token);\r\n          localStorage.setItem('userType', data.userType); // Almacena el tipo de usuario\r\n          swal('Éxito', 'Inicio de sesión exitoso.', 'success')\r\n            .then(() => {\r\n              navigate('/home'); // Redirige al usuario a la página de inicio\r\n            })\r\n            .catch(error => {\r\n              console.error('Error:', error);\r\n            });\r\n        } else {\r\n          swal('Error', 'Inicio de sesión fallido. Por favor, verifica tus credenciales.', 'error');\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.error('Error:', error);\r\n      });\r\n  };\r\n\r\n\r\n  const handleRegister = () => {\r\n\r\n    if (!username || !email || !pass) {\r\n      swal('Error', 'Por favor, rellena todos los campos.', 'error');\r\n      return;\r\n    }\r\n    if (!validarCorreo(email) || !validarContraseña(pass)) {\r\n      swal('Error', 'Por favor, introduce un correo electrónico y una contraseña válidos.', 'error');\r\n      return;\r\n    }\r\n    if (!validarCorreo(email) || !validarContraseña(pass)) {\r\n      swal('Error', 'Por favor, introduce un correo electrónico y una contraseña válidos.', 'error');\r\n      return;\r\n    }\r\n\r\n    fetch('http://localhost:5000/api/usuarios', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ username, email, pass, rol: 'user' })\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        if (data.id) {\r\n          swal('Éxito', 'Registro exitoso. Ahora puedes iniciar sesión.', 'success')\r\n            .then(() => {\r\n              setFormType('login'); // Cambia a la pantalla de inicio de sesión\r\n            });\r\n        } else {\r\n          swal('Error', 'Registro fallido. Por favor, intenta de nuevo.', 'error');\r\n        }\r\n      });\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <div className=\"login__logo-container\">\r\n        <img src={logo} alt=\"Logo Tecno Store\" className=\"login__logo\" />\r\n      </div>\r\n      <h1 className=\"login__title\">{formType === 'login' ? 'Iniciar Sesión' : 'Regístrate'}</h1>\r\n      {formType === 'register' && (\r\n        <InputField\r\n          type=\"text\"\r\n          placeholder=\"Nombre de usuario\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n        />\r\n      )}\r\n      <InputField\r\n        type=\"email\"\r\n        placeholder=\"Correo electrónico\"\r\n        value={email}\r\n        onChange={(e) => setEmail(e.target.value)}\r\n      />\r\n      <InputField\r\n        type={isPassVisible ? 'text' : 'password'}\r\n        placeholder=\"Contraseña\"\r\n        value={pass}\r\n        onChange={(e) => setPass(e.target.value)}\r\n        icon={isPassVisible ? eyeOpen : eyeClosed}\r\n        onIconClick={togglePassVisibility}\r\n      />\r\n\r\n      <Button onClick={formType === 'login' ? handleLogin : handleRegister}>\r\n        {formType === 'login' ? 'Iniciar Sesión' : 'Registrarse'}\r\n      </Button>\r\n      <p className=\"login__register\">\r\n        {formType === 'login' ? 'No tienes una cuenta?' : 'Ya tienes una cuenta?'}\r\n        <span onClick={toggleFormType} className=\"login__register-link\">\r\n          {formType === 'login' ? 'Regístrate' : 'Iniciar Sesión'}\r\n        </span>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}